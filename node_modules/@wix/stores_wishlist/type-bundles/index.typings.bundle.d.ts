interface WishlistData {
    /** GUID unique to this list for this site */
    _id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /** List of items in the list. Not necessarily the full list (can depends on request data) */
    items?: WishlistItem[];
    /** Total count of items in the list */
    totalCount?: number;
}
interface WishlistItem {
    /** Unique identifier for an item of this type and origin */
    _id?: string;
    /**
     * The data the item was save to the list
     * @readonly
     */
    dateAdded?: Date | null;
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface ItemsAddedToWishlist {
    /** GUID unique to this list for its site */
    _id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /** List of items that were added to wishlist */
    items?: WishlistItem[];
}
interface ItemsRemovedFromWishlist {
    /** GUID unique to this list for its site */
    _id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /** List of items that were removed from wishlist */
    items?: WishlistItem[];
}
interface GetWishlistRequest {
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}
interface WishlistItemKind {
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface GetWishlistResponse {
    /** Object containing requested list data */
    wishlist?: WishlistData;
}
interface AddToWishlistRequest {
    /** List of items to add to list */
    items?: WishlistItem[];
}
interface AddToWishlistResponse {
}
interface RemoveFromWishlistRequest {
    /** List of items to remove from list */
    items?: WishlistItem[];
}
interface RemoveFromWishlistResponse {
}
interface GetWishlistByIdRequest {
    /** Unique identifier representing requested list */
    _id: string;
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}
interface GetWishlistByIdResponse {
    /** Object containing requested list data */
    wishlist?: WishlistData;
}
interface GetWishlistsRequest {
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
}
interface GetWishlistsResponse {
    /** List result of requested wishlists */
    wishlists?: WishlistData[];
}
interface MessageEnvelope {
    /** App instance ID. */
    instanceId?: string | null;
    /** Event type. */
    eventType?: string;
    /** The identification type and identity data. */
    identity?: IdentificationData;
    /** Stringify payload. */
    data?: string;
}
interface IdentificationData extends IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
    /** @readonly */
    identityType?: WebhookIdentityType;
}
/** @oneof */
interface IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
}
declare enum WebhookIdentityType {
    UNKNOWN = "UNKNOWN",
    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
    MEMBER = "MEMBER",
    WIX_USER = "WIX_USER",
    APP = "APP"
}
interface WishlistItemNonNullableFields {
    _id: string;
    type: string;
    origin: string;
}
interface WishlistDataNonNullableFields {
    ownerId: string;
    items: WishlistItemNonNullableFields[];
    totalCount: number;
}
interface GetWishlistByIdResponseNonNullableFields {
    wishlist?: WishlistDataNonNullableFields;
}
/**
 * Get wishlist by id
 * @param _id - Unique identifier representing requested list
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @permissionId WISHLIST.MANAGE-SITE-WISHLISTS
 * @returns Object containing requested list data
 */
declare function getWishlistById(_id: string, options?: GetWishlistByIdOptions): Promise<WishlistData & WishlistDataNonNullableFields>;
interface GetWishlistByIdOptions {
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}

export { type AddToWishlistRequest, type AddToWishlistResponse, type GetWishlistByIdOptions, type GetWishlistByIdRequest, type GetWishlistByIdResponse, type GetWishlistByIdResponseNonNullableFields, type GetWishlistRequest, type GetWishlistResponse, type GetWishlistsRequest, type GetWishlistsResponse, type IdentificationData, type IdentificationDataIdOneOf, type ItemsAddedToWishlist, type ItemsRemovedFromWishlist, type MessageEnvelope, type RemoveFromWishlistRequest, type RemoveFromWishlistResponse, WebhookIdentityType, type WishlistData, type WishlistDataNonNullableFields, type WishlistItem, type WishlistItemKind, getWishlistById };
