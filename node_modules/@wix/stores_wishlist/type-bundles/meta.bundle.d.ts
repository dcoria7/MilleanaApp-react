interface WishlistData$1 {
    /** GUID unique to this list for this site */
    id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /** List of items in the list. Not necessarily the full list (can depends on request data) */
    items?: WishlistItem$1[];
    /** Total count of items in the list */
    totalCount?: number;
}
interface WishlistItem$1 {
    /** Unique identifier for an item of this type and origin */
    id?: string;
    /**
     * The data the item was save to the list
     * @readonly
     */
    dateAdded?: Date | null;
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface WishlistItemKind$1 {
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface GetWishlistByIdRequest$1 {
    /** Unique identifier representing requested list */
    id: string;
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind$1[];
}
interface GetWishlistByIdResponse$1 {
    /** Object containing requested list data */
    wishlist?: WishlistData$1;
}
interface WishlistItemNonNullableFields$1 {
    id: string;
    type: string;
    origin: string;
}
interface WishlistDataNonNullableFields$1 {
    ownerId: string;
    items: WishlistItemNonNullableFields$1[];
    totalCount: number;
}
interface GetWishlistByIdResponseNonNullableFields$1 {
    wishlist?: WishlistDataNonNullableFields$1;
}

interface WishlistData {
    /** GUID unique to this list for this site */
    _id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /** List of items in the list. Not necessarily the full list (can depends on request data) */
    items?: WishlistItem[];
    /** Total count of items in the list */
    totalCount?: number;
}
interface WishlistItem {
    /** Unique identifier for an item of this type and origin */
    _id?: string;
    /**
     * The data the item was save to the list
     * @readonly
     */
    dateAdded?: Date | null;
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface WishlistItemKind {
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
interface GetWishlistByIdRequest {
    /** Unique identifier representing requested list */
    _id: string;
    /** List length limit. Default is 100 */
    limit?: number | null;
    /** List starting index offset. Default is 0 */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}
interface GetWishlistByIdResponse {
    /** Object containing requested list data */
    wishlist?: WishlistData;
}
interface WishlistItemNonNullableFields {
    _id: string;
    type: string;
    origin: string;
}
interface WishlistDataNonNullableFields {
    ownerId: string;
    items: WishlistItemNonNullableFields[];
    totalCount: number;
}
interface GetWishlistByIdResponseNonNullableFields {
    wishlist?: WishlistDataNonNullableFields;
}

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function getWishlistById(): __PublicMethodMetaInfo<'POST', {}, GetWishlistByIdRequest, GetWishlistByIdRequest$1, GetWishlistByIdResponse & GetWishlistByIdResponseNonNullableFields, GetWishlistByIdResponse$1 & GetWishlistByIdResponseNonNullableFields$1>;

export { type __PublicMethodMetaInfo, getWishlistById };
