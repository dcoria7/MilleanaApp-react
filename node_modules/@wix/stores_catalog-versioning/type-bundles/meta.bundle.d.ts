declare enum Version$1 {
    V1_CATALOG = "V1_CATALOG",
    V3_CATALOG = "V3_CATALOG"
}
interface GetCatalogVersionRequest$1 {
}
interface GetCatalogVersionResponse$1 {
    /** The version of Stores Catalog installed on a site. */
    catalogVersion?: Version$1;
}
interface GetCatalogVersionResponseNonNullableFields$1 {
    catalogVersion: Version$1;
}

declare enum Version {
    V1_CATALOG = "V1_CATALOG",
    V3_CATALOG = "V3_CATALOG"
}
interface GetCatalogVersionRequest {
}
interface GetCatalogVersionResponse {
    /** The version of Stores Catalog installed on a site. */
    catalogVersion?: Version;
}
interface GetCatalogVersionResponseNonNullableFields {
    catalogVersion: Version;
}

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function getCatalogVersion(): __PublicMethodMetaInfo<'GET', {}, GetCatalogVersionRequest, GetCatalogVersionRequest$1, GetCatalogVersionResponse & GetCatalogVersionResponseNonNullableFields, GetCatalogVersionResponse$1 & GetCatalogVersionResponseNonNullableFields$1>;

export { type __PublicMethodMetaInfo, getCatalogVersion };
